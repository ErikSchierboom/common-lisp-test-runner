{
  "status": "fail",
  "message": [],
  "tests": [
    {
      "name": "Lenny's favorite food is a symbol",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny's favorite food is a symbol",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny's secret keyword is a keyword",
      "status": "error",
      "message": "The function BASICS::COOL is undefined.\n   [Condition of type UNDEFINED-FUNCTION]\n\n#<ENVIRONMENT {100461D483}>\n   [Environment of thread #<THREAD \"main thread\" RUNNING {1000518083}>]\n\nAvailable restarts:\n 0: [RETRY] Retry EVAL of current toplevel form.\n 1: [CONTINUE] Ignore error and continue loading file \"/opt/test-runner/bin/run.sh\".\n 2: [ABORT] Abort loading file \"/opt/test-runner/bin/run.sh\".\n 3: [ABORT] Abort script, exiting lisp.\n\nBacktrace:\n 7: ((:METHOD PROCESS-TEST-RESULT (IT.BESE.FIVEAM::UNEXPECTED-TEST-FAILURE)) #<UNEXPECTED-TEST-FAILURE {100442E8E3}>)\n 8: (GENERATE-REPORT (#<TEST-PASSED {1004426803}> #<TEST-PASSED {1004423D03}> #<UNEXPECTED-TEST-FAILURE {100442E8E3}> #<TEST-PASSED {10044348B3}> #<TEST-PASSED {1004434743}> #<TEST-PASSED {10044345B3}> #<TEST-PASSED {1004434453}> #<TEST-PASSED {10044342F3}> #<TEST-PASSED {1004434193}> #<TEST-PASSED {1004434033}> #<TEST-PASSED {1004433ED3}> #<TEST-PASSED {1004433D73}> #<TEST-PASSED {1004433C13}> #<TEST-PASSED {1004433AB3}> #<TEST-PASSED {1004433953}> #<TEST-PASSED {10044337F3}> #<TEST-PASSED {1004436BC3}> #<TEST-PASSED {1004436A63}> #<TEST-PASSED {1004436903}> #<TEST-PASSED {10044367A3}> #<TEST-PASSED {1004436643}> #<TEST-PASSED {10044364E3}> #<TEST-PASSED {1004436383}> #<TEST-PASSED {1004436223}> #<TEST-PASSED {10044360C3}> #<TEST-PASSED {1004435F63}> #<TEST-PASSED {1004435DD3}> #<TEST-PASSED {1004435C63}> #<TEST-PASSED {1004437E23}> #<TEST-PASSED {1004437CA3}> #<TEST-PASSED {100443C793}> #<TEST-PASSED {100443B993}> #<TEST-PASSED {100443AB93}> #<TEST-PASSED {100443A163}> #<TEST-PASSED {1004439783}>) NIL)\n 9: (TEST-RUNNER)\n 10: (SB-INT:SIMPLE-EVAL-IN-LEXENV (TEST-RUNNER) #<NULL-LEXENV>)\n 11: (EVAL-TLF (TEST-RUNNER) 15 NIL)\n 12: ((LABELS SB-FASL::EVAL-FORM :IN SB-INT:LOAD-AS-SOURCE) (TEST-RUNNER) 15)\n 13: ((LAMBDA (SB-KERNEL:FORM &KEY :CURRENT-INDEX &ALLOW-OTHER-KEYS) :IN SB-INT:LOAD-AS-SOURCE) (TEST-RUNNER) CURRENT-INDEX 15)\n 14: (SB-C::%DO-FORMS-FROM-INFO #<CLOSURE (LAMBDA (SB-KERNEL:FORM &KEY :CURRENT-INDEX &ALLOW-OTHER-KEYS) :IN SB-INT:LOAD-AS-SOURCE) {100153CF0B}> #<SOURCE-INFO {100153CED3}> INPUT-ERROR-IN-LOAD)\n 15: (SB-INT:LOAD-AS-SOURCE #<FD-STREAM for \"file /opt/test-runner/bin/run.lisp\" {100152E863}> VERBOSE NIL PRINT NIL CONTEXT loading)\n 16: ((FLET SB-FASL::THUNK :IN LOAD))\n 17: (SB-FASL::CALL-WITH-LOAD-BINDINGS #<CLOSURE (FLET SB-FASL::THUNK :IN LOAD) {7FD6B816769B}> #<FD-STREAM for \"file /opt/test-runner/bin/run.lisp\" {100152E863}>)\n 18: ((FLET SB-FASL::LOAD-STREAM :IN LOAD) #<FD-STREAM for \"file /opt/test-runner/bin/run.lisp\" {100152E863}> NIL)\n 19: (LOAD #<FD-STREAM for \"file /opt/test-runner/bin/run.lisp\" {100152E863}> VERBOSE NIL PRINT NIL IF-DOES-NOT-EXIST T EXTERNAL-FORMAT DEFAULT)\n 20: ((FLET SB-IMPL::LOAD-SCRIPT :IN SB-IMPL::PROCESS-SCRIPT) #<FD-STREAM for \"file /opt/test-runner/bin/run.lisp\" {100152E863}>)\n 21: ((FLET SB-UNIX::BODY :IN SB-IMPL::PROCESS-SCRIPT))\n 22: ((FLET \"WITHOUT-INTERRUPTS-BODY-2\" :IN SB-IMPL::PROCESS-SCRIPT))\n 23: (SB-IMPL::PROCESS-SCRIPT /opt/test-runner/bin/run.sh)\n 24: (SB-IMPL::TOPLEVEL-INIT)\n 25: ((FLET SB-UNIX::BODY :IN SAVE-LISP-AND-DIE))\n 26: ((FLET \"WITHOUT-INTERRUPTS-BODY-7\" :IN SAVE-LISP-AND-DIE))\n 27: ((LABELS SB-IMPL::RESTART-LISP :IN SAVE-LISP-AND-DIE))",
      "output": null
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise atoms",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can recognise conses",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can get the first item of a cons",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can get the first item of a cons",
      "status": "pass",
      "message": null,
      "output": ""
    },
    {
      "name": "Lenny can get the rest of a cons",
      "status": "pass",
      "message": null,
      "output": "Well, here is the cons: (A)"
    },
    {
      "name": "Lenny can get the rest of a cons",
      "status": "pass",
      "message": null,
      "output": "Well, here is the cons: (A)"
    },
    {
      "name": "Lenny can get the rest of a cons",
      "status": "pass",
      "message": null,
      "output": "Well, here is the cons: (A B)"
    },
    {
      "name": "Lenny can get the rest of a cons",
      "status": "pass",
      "message": null,
      "output": "Well, here is the cons: (A B)"
    },
    {
      "name": "Lenny can get the rest of a cons",
      "status": "pass",
      "message": null,
      "output": "Well, here is the cons: (A . B)"
    }
  ]
}